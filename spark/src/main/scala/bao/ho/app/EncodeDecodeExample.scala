package bao.ho.app

import com.google.common.io.BaseEncoding
import org.apache.commons.codec.Charsets

object EncodeDecodeExample {

  def decode(str: String): String = {
    val bytes = java.util.Base64.getDecoder.decode(str)
    new String(bytes)
  }

  def encode(str: String): String =
    BaseEncoding.base64().encode(str.getBytes(Charsets.UTF_8))

  def main(args: Array[String]): Unit = {
    val encodedString =
      ""

    println(decode(encodedString))
  }
}
